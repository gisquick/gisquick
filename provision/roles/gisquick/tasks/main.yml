---
# Gisquick - DEVELOPMENT

- name: Install packages
  apt:
    pkg: "{{ packages }}"
    force: yes
    install_recommends: no
    state: latest
  environment: "{{ proxy_env }}"
  become: yes


### DEPENDENCIES
# Python
- name: Install Gisquick Python requirements
  pip:
    virtualenv: /home/{{ ansible_user }}/.virtualenvs/gisquick
    virtualenv_python: python3
    requirements: "{{ synced_folder }}/server/requirements.txt"
    virtualenv_site_packages: yes
    state: present
  tags:
    - dep-python

- name: Install Gisquick Python development requirements
  pip:
    virtualenv: /home/{{ ansible_user }}/.virtualenvs/gisquick
    virtualenv_python: python3
    requirements: "{{ synced_folder }}/server/requirements-dev.txt"
    virtualenv_site_packages: yes
    state: present
  tags:
    - dep-python

- name: Add source code on Python path
  shell: >
    export WORKON_HOME="$HOME/.virtualenvs"
    &&
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    &&
    mkvirtualenv gislab-web
    &&
    workon gisquick
    &&
    ln -sf python3 /home/{{ ansible_user }}/.virtualenvs/gislab-web/bin/python
    &&
    add2virtualenv {{ synced_folder }}/server
  args:
    chdir: "{{ synced_folder }}"
    executable: /bin/bash
  tags:
    - dep-python


# Javascript
- name: Install NVM
  shell: >
    curl {{ nvm_url }}/v{{ nvm_version }}/install.sh
    | bash
  args:
    creates: /home/{{ ansible_user }}/.nvm/nvm.sh
  tags:
    - dep-javascript

- name: Install NodeJS
  shell: >
    export NVM_DIR="$HOME/.nvm"
    &&
    . "$NVM_DIR/nvm.sh"
    &&
    nvm install v{{ node_version }}
  tags:
    - dep-javascript

- name: Install Gulp
  shell: >
    export NVM_DIR="$HOME/.nvm"
    &&
    . "$NVM_DIR/nvm.sh"
    &&
    nvm use v{{ node_version }}
    &&
    npm install -g gulp
  tags:
    - dep-javascript


- name: Create local development directory for Node modules
  file:
    path: /home/{{ ansible_user }}/dev/node_modules
    state: directory
  tags:
    - dep-javascript

- name: Symlink Node modules from local development directory
  file:
    src: /home/{{ ansible_user }}/dev/node_modules
    dest: "{{ synced_folder }}/clients/node_modules"
    state: link
    force: yes
  tags:
    - dep-javascript

- name: Prune local Node modules for Gisquick clients
  shell: >
    export NVM_DIR="$HOME/.nvm"
    &&
    . "$NVM_DIR/nvm.sh"
    &&
    nvm use v{{ node_version }}
    &&
    npm prune
  args:
    chdir: "{{ synced_folder }}/clients"
  tags:
    - dep-javascript

- name: Install local Node modules for Gisquick clients
  shell: >
    export NVM_DIR="$HOME/.nvm"
    &&
    . "$NVM_DIR/nvm.sh"
    &&
    nvm use v{{ node_version }}
    &&
    {{ item }}
  with_items:
    - npm install
    - npm install web
  args:
    chdir: "{{ synced_folder }}/clients"
  tags:
    - dep-javascript


### DJANGO SERVER
- name: Create Gisquick project directory
  file:
    path: "/home/{{ ansible_user }}/deploy/www/devproj"
    state: directory
    recurse: yes
  tags:
    - server-django


- name: Create Gisquick project
  shell: >
    export WORKON_HOME="$HOME/.virtualenvs"
    &&
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    &&
    mkvirtualenv gislab-web
    &&
    workon gisquick
    &&
    django-admin.py startproject
    --template={{ synced_folder }}/server/webgis/conf/project_template/
    devproj
    /home/{{ ansible_user }}/deploy/www
  args:
    executable: /bin/bash
  tags:
    - server-django

- name: Install custom Gisquick project configuration
  template:
    src: django/settings_custom.py.j2
    dest: "/home/{{ ansible_user }}/deploy/www/devproj/settings_custom.py"
  tags:
    - server-django

- name: Build Gisquick project database
  django_manage:
    command: migrate
    app_path: "/home/{{ ansible_user }}/deploy/www"
    settings: devproj.settings
    virtualenv: /home/{{ ansible_user }}/.virtualenvs/gisquick
  tags:
    - server-django

- name: Create superuser account (u-> admin, p-> admin)
  shell: >
    export WORKON_HOME="$HOME/.virtualenvs"
    &&
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    &&
    workon gisquick
    &&
    echo "from webgis.viewer.models import GisquickUser;
    GisquickUser.objects.create_superuser('admin', 'admin@gisquick.io', 'admin')"
    | python ./manage.py shell
  args:
    chdir: "/home/{{ ansible_user }}/deploy/www"
    executable: /bin/bash
  tags:
    - server-django

- name: Create ordinary user account (u-> {{ ansible_user }}, p -> {{ ansible_user }})
  shell: >
    export WORKON_HOME="$HOME/.virtualenvs"
    &&
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    &&
    workon gisquick
    &&
    echo "from webgis.viewer.models import GisquickUser;
    GisquickUser.objects.create_user('{{ ansible_user }}', 'user@gisquick.io', '{{ ansible_user }}')"
    | python ./manage.py shell
  args:
    chdir: "/home/{{ ansible_user }}/deploy/www"
    executable: /bin/bash
  tags:
    - server-django


### WEB CLIENT
- name: Build Gisquick JS
  shell: >
    export NVM_DIR="$HOME/.nvm"
    &&
    . "$NVM_DIR/nvm.sh"
    &&
    nvm use v{{ node_version }}
    &&
    gulp
  args:
    chdir: "{{ synced_folder }}/clients"
  tags:
    - client-web

# vim: set ts=8 sts=2 sw=2 et:
